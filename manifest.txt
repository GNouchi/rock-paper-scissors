//notes and ideas for planning
//odin scope instructions

Step 1: Setup the project structure
Step 2: Write the logic to get the computer choice
Step 3: Write the logic to get the human choice
Step 4: Declare the players score variables
Step 5: Write the logic to play a single round
Step 6: Write the logic to play the entire game


Rock Paper Scissors [0,1,2] index position
let computerChoice, playerChoice = '';
let outcome
{
    [playerChoice,computerChoice,match],
    [playerChoice,computerChoice,match]
};


if computerChoice = 'rock' && playerChoice = 'paper' then log outcome win
if computerChoice = 'rock' && playerChoice = 'scissors' then log outcome lose
etc..

or

setChoice(choice){
    if choice==='rock'{
        return 0;
    }
    if choice==='paper'{
        return 1;
    }
    if choice==='scissors'{
        return 2;
    }
}
computerRock outcome ['draw','lose',''win']
computerPaper outcome ['win','draw','lose']
computerScissors outcome ['lose','win','draw']

choices = [null, null]
outcomeMatrix=[
['draw','lose',''win'], //rock
['win','draw','lose'], //paper
['lose','win','draw'], //scissors
]

//outcomeMatrix[playerChoice][computerChoice]
if rock-rock then outcomeMatrix[0][0] = draw;
if rock-paper then outcomeMatrix[0][1] = lose;
if rock-scissors then outcomeMatrix[0][2] = win;
if paper-rock then outcomeMatrix[1][0] = win;
if paper-paper then outcomeMatrix[1][0] = draw;
if paper-scissors then outcomeMatrix[1][0] = lose;
if scissors-rock then outcomeMatrix[2][0] = lose;
if scissors-paper then outcomeMatrix[2][0] =  win;
if scissors-scissors then outcomeMatrix[2][0] = draw ;

// could also write switch statement

function logChoices(playerInput,computerInput,choices){
    setPlayerChoice(playerInput,choices);
    setComputerChoice(computerInput, choices);
    return choices;
}

function setPlayerChoice(playerInput='',choices=[null,null]){
    choices[0]= setChoice(playerInput);
    return choices;
}

function setComputerChoice(computerInput='', choices=[null,null]){
    choices[1] = setChoice(computerInput);
    return choices;
}

function evalPlayerChoice(choice){
    if(choice=='rock'||choice=='paper'||choice=='scissors'){
        return true;
    }
    return false;
}

function convertToI(text) {
    if (text == 'rock') {
        return 0;
    }
    if (text == 'paper') {
        return 1;
    }
    if (text == 'scissors') {
        return 2;
    }
    else{
        console.log('***ERROR: FAILED index conversion');
        return;
    }
    console.log(`this should not run`);
}

resetAllChoice function;
promptPlayerChoice; 


resetChoices() ->
run computerChoice() ->
set computerChoice() ->
prompt playerChoice ->
eval playerChoice() ->
set playerChoice() ->
evaluate outcome() ->
logOutcome() ->
resetChoices() ->

